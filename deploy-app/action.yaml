name: 'Deploy App'
description: 'Builds and deploys an app'
inputs:
  app_name:
    description: 'Name of the app'
    required: true
  dockerfile_path:
    description: 'Path to the Dockerfile'
    required: true
  appspec_path:
    description: 'Path to the appspec file'
    required: true
  tag:
    description: 'Tag for the Docker image'
    required: true
  registry:
    description: 'Digitalocean Docker registry'
    required: true
  do_token:
    description: 'Digitalocean access token'
    required: true
  app_spec_vars:
    description: 'JSON string of key value pairs that will be passed to app spec'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ inputs.do_token }}

    - name: Build container image
      shell: bash
      run: |
        docker build -f ${{ inputs.dockerfile_path }} -t $(echo $REGISTRY)/$(echo ${{ inputs.app_name }}):$(echo ${{ inputs.tag }}) .
        docker tag $(echo $REGISTRY)/$(echo ${{ inputs.app_name }}):$(echo ${{ inputs.tag }}) $(echo $REGISTRY)/$(echo ${{ inputs.app_name }}):latest
      env:
        REGISTRY: ${{ inputs.registry }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      shell: bash
      run: doctl registry login --expiry-seconds 60 

    - name: Push image to DigitalOcean Container Registry
      shell: bash
      run: |
        docker push $(echo $REGISTRY)/$(echo ${{ inputs.app_name }}):$(echo ${{ inputs.tag }})
        docker push $(echo $REGISTRY)/$(echo ${{ inputs.app_name }}):latest

    - name: Prepare environment variables
      shell: bash
      id: prepare
      run: |
        echo "env_vars<<EOF" >> $GITHUB_ENV
        echo ${{ inputs.app_spec_vars }} | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Render app spec
      shell: bash
      run: envsubst < ${{ inputs.appspec_path }} > ${{ inputs.appspec_path }}-updated

    - name: Print app spec
      shell: bash
      run: cat ${{ inputs.appspec_path }}-updated

    - name: Update App Platform app
      shell: bash
      run: doctl apps create --spec ${{ inputs.appspec_path }}-updated --upsert true
